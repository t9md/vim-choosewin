*choowsewin.txt* land to window you choose like tmux's 'display-pane'.

Version: 0.6
Author : t9md <taqumd@gmail.com>
GitHub : https://github.com/t9md/vim-choowsewin
==============================================================================
CONTENTS					*choowsewin-contents*

Introduction				    |choowsewin-introduction|
Mapping					    |choowsewin-mapping|
Commands				    |choowsewin-commands|
Variables				    |choowsewin-variables|
Functions				    |choowsewin-functions|
Configuration Example			    |choowsewin-example|
Bug					    |choowsewin-bug|
Todo					    |choowsewin-todo|
Changelog				    |choowsewin-changelog|

==============================================================================
INTRODUCTION					*choowsewin-introduction*

Land to window you choose~

Aiming to mimic tmux's `display-pane` feature, which enables you to choose
window interactively.

This plugin should be useful especially when you are working on high
resolution wide display.
Since with wide display, you are likely to open multiple window and
moving around window is a little bit tiresome.

This plugin make window excursion simplify.

	1. display window label on statusbar
	2. read input from user
	3. you can land window you choose

==============================================================================
MAPPINGS					*choowsewin-mappings*

<Plug>(choosewin)

==============================================================================
COMMANDS						*choowsewin-commands*

*:ChooseWin*

==============================================================================
VARIABLES						*choowsewin-variables*

*g:choosewin_active*
	Default: 0
	Type:    |Number|
	Become active while choosewin is activated, for use in &statusline

*g:choosewin_statusline_replace*
	Default: 1
	Type: Number

*g:choosewin_color_label*
	Default: See plugin/choosewin.vim
	Type: |Dictionary|

	Set color with collowing fomrat.
	{
	  'gui': [ {guibg}, {guifg}, {gui} ],
	  'cterm': [ {ctermbg}, {ctermfg}, {cterm}]
	}

	You can omit unused color, means if you use vim only GUI, you don't
	need to configure 'cterm' field.
	And if you want set {guifg} but not {guibg}, use empty string('') like
>
	let g:choosewin_color_label = { 'gui': ['', 'white'] }
<

	Exeample~
>
	let g:choosewin_color_label = {
	      \ 'gui': ['ForestGreen', 'white', 'bold'],
	      \ 'cterm': [ 9, 16]
	      \ }
	let g:choosewin_color_other = {
	      \ 'gui': ['gray20', 'black'],
	      \ 'cterm': [ 240, 0]
	      \ }
<

*g:choosewin_color_other*
	Default: See plugin/choosewin.vim
	Type: |Dictionary|

*g:choosewin_label*
	Default: '1234567890'
	Type: |String|
	[NOTE] choosewin ignore case you input so that you don't need to
	press Shift. This is for show label with upper case to standout and
	choose window with minimal key stroke.

	Exeample~
>
	let g:choosewin_label = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ'
<
*g:choosewin_label_align*
	Default: 'center'
	One of 'right', 'center', 'left'

*g:choosewin_label_padding*
	Default: 3
	Type: |Number|
	Controll padding concatanated around window label.

*g:choosewin_label_fill*
	Default: 0
	Type: |Number|
	Set 1 to fill statusline

*g:choosewin_return_on_single_win*
	Default: 0
	Type: |Number|
	Set 1 to return immediately when number of window is 1.

*g:choosewin_skip_on_single_win*
	Default: 1
	Type: |Number|
	Set 1 to choose immediately when number of window is 1.

==============================================================================
FUNCTIONS						*choowsewin-functions*

							   *choosewin#start()*
choosewin#start({winnum-list}, {label-string})
	{winnum-list}
		|List| of window number.
	{label-string}
		Sequence of character used for label.
		Must longer than {winnum-list}

	Exeample: show label for specific window~
>
	" win3 => d, win4 => e, silently ignored.
	call choosewin#start([3,4], 'def')
<
==============================================================================
CONFIGURATION EXAMPLE				    *choowsewin-example*
>
	nmap  -  <Plug>(choosewin)
<
==============================================================================
BUG							    *choowsewin-bug*

==============================================================================
TODO							    *choowsewin-todo*

==============================================================================
CHANGELOG						*choowsewin-changelog*

2013-12-28: v0.6
	- cleanup
	- now independent from &statusline plugin( such as ezbar )
2013-12-21: v0.1
	- initial release

==============================================================================
vim:tw=78:ts=8:ft=help:norl:
